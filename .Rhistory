mutate(
kombi_afhentede = mean_afhentede + sidste_afhentede / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h)
)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
# Udtræk R²
summary(model)
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
mutate(
kombi_afhentede = mean_afhentede + sidste_afhentede / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h)
)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
# Udtræk R²
summary(model)
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
mutate(
kombi_afhentede = mean_afhentede + sidste_afhentede / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h)
)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
# Udtræk R²
summary(model)
cor_matrix <- cor(x)
cor_long <- as.data.frame(as.table(cor_matrix)) |>
rename(Korrelation = Freq) |>
filter(Var1 != Var2) |>
filter(abs(Korrelation) > 0.75) |>
arrange(desc(Korrelation))
cor_long
# Ridge og Lasso --------------------------------------------
grid <- 10^seq(10, -2, length = 100)
set.seed(123)
train <- sample(1:nrow(x), nrow(x)*2/3)
test <- (-train)
y.test <- y[test]
# Ridge
ridge.mod <- glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_ridge_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
ridge.pred <- predict(ridge.mod, s = bestlam, newx = x[test, ])
rmse_ridge_test <- sqrt(mean((ridge.pred - y.test)^2))
bestlam
rmse_ridge_cv
rmse_ridge_test
# Lasso
lasso.mod <- glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_lasso_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
rmse_lasso_test <- sqrt(mean((lasso.pred - y.test)^2))
bestlam
rmse_lasso_cv
rmse_lasso_test
# 0 features
set.seed(123)
glm.fit <- glm(antal_afhentede ~ 1, data = samlet_data_flot[train, ])
rmse_0_cv <- sqrt(cv.glm(samlet_data_flot[train, ], glm.fit , K = 10)$delta[1])
rmse_0_test <- sqrt(mean((samlet_data_flot[test, ]$antal_afhentede - predict(glm.fit, samlet_data_flot[test, ]))^2))
rmse_0_cv
rmse_0_test
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
View(samlet_data_flot)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
# Udtræk R²
summary(model)
# Ridge og Lasso --------------------------------------------
grid <- 10^seq(10, -2, length = 100)
set.seed(123)
train <- sample(1:nrow(x), nrow(x)*2/3)
test <- (-train)
y.test <- y[test]
# Ridge
ridge.mod <- glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_ridge_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
ridge.pred <- predict(ridge.mod, s = bestlam, newx = x[test, ])
rmse_ridge_test <- sqrt(mean((ridge.pred - y.test)^2))
rmse_ridge_cv
rmse_ridge_test
# Lasso
lasso.mod <- glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_lasso_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
rmse_lasso_test <- sqrt(mean((lasso.pred - y.test)^2))
rmse_lasso_cv
rmse_lasso_test
# 0 features
set.seed(123)
glm.fit <- glm(antal_afhentede ~ 1, data = samlet_data_flot[train, ])
rmse_0_cv <- sqrt(cv.glm(samlet_data_flot[train, ], glm.fit , K = 10)$delta[1])
rmse_0_test <- sqrt(mean((samlet_data_flot[test, ]$antal_afhentede - predict(glm.fit, samlet_data_flot[test, ]))^2))
rmse_0_test
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
mutate(
kombi_afhentede = mean_afhentede + sidste_afhentede / 2,
kombi_tilskuere = mean_tilskuere + sidste_tilskuer_antal / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
View(samlet_data_flot)
write_rds(samlet_data_flot, "test_samlet_data")
write_rds(samlet_data_flot, "test_samlet_data.rds")
model <- lm(antal_afhentede ~ . , data = samlet_data_flot)
vif(model)
samlet_data_flot_1 <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot_1 <- samlet_data_flot |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
samlet_data_flot_1 <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot_1 <- samlet_data_flot_1 |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
View(samlet_data_flot_1)
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot_1 |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
model <- lm(antal_afhentede ~ . , data = samlet_data_flot)
vif(model)
# Udtræk R²
summary(model)
function (nx = NULL, ny = nx, col = "lightgray", lty = "dotted",
lwd = par("lwd"), equilogs = TRUE)
# Ridge og Lasso --------------------------------------------
grid <- 10^seq(10, -2, length = 100)
set.seed(123)
train <- sample(1:nrow(x), nrow(x)*2/3)
test <- (-train)
y.test <- y[test]
# Ridge
ridge.mod <- glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_ridge_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
ridge.pred <- predict(ridge.mod, s = bestlam, newx = x[test, ])
rmse_ridge_test <- sqrt(mean((ridge.pred - y.test)^2))
rmse_ridge_test
rmse_ridge_cv
# Lasso
lasso.mod <- glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_lasso_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
rmse_lasso_test <- sqrt(mean((lasso.pred - y.test)^2))
rmse_lasso_test
function (seed, kind = NULL, normal.kind = NULL, sample.kind = NULL)
# 0 features
set.seed(123)
glm.fit <- glm(antal_afhentede ~ 1, data = samlet_data_flot[train, ])
rmse_0_cv <- sqrt(cv.glm(samlet_data_flot[train, ], glm.fit , K = 10)$delta[1])
rmse_0_test <- sqrt(mean((samlet_data_flot[test, ]$antal_afhentede - predict(glm.fit, samlet_data_flot[test, ]))^2))
rmse_0_test
samlet_data_flot <- read_rds("data/samlet_data_flot.rds")
samlet_data_flot <- samlet_data_flot |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h)
)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(antal_afhentede ~ . , data = samlet_data_flot)
vif(model)
# Udtræk R²
summary(model)
# Ridge og Lasso --------------------------------------------
grid <- 10^seq(10, -2, length = 100)
set.seed(123)
train <- sample(1:nrow(x), nrow(x)*2/3)
test <- (-train)
y.test <- y[test]
# Ridge
ridge.mod <- glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_ridge_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
ridge.pred <- predict(ridge.mod, s = bestlam, newx = x[test, ])
rmse_ridge_test <- sqrt(mean((ridge.pred - y.test)^2))
rmse_ridge_test
# Lasso
lasso.mod <- glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_lasso_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
rmse_lasso_test <- sqrt(mean((lasso.pred - y.test)^2))
rmse_lasso_test
rmse_lasso_cv
model <- lm(y ~ x)
x <- model.matrix(antal_afhentede ~ . - 1, samlet_data_flot)
y <- samlet_data_flot$antal_afhentede
model <- lm(y ~ x)
vif(model)
datasæt <- read_rds("data/samlet_data_flot.rds")
View(datasæt)
datasæt <- datasæt |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
datasæt <- read_rds("data/samlet_data_flot.rds")
datasæt_1 <- datasæt |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
datasæt <- read_rds("data/samlet_data_flot.rds")
datasæt <- datasæt |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
View(datasæt)
dataset <- read_rds("data/samlet_data_flot.rds")
View(dataset)
dataset <- read_rds("data/samlet_data_flot.rds")
View(dataset)
dataset <- dataset |>
mutate(
kombi_afhentede = (mean_afhentede + sidste_afhentede) / 2,
kombi_tilskuere = (mean_tilskuere + sidste_tilskuer_antal) / 2
) |>
dplyr::select(
!c(mean_afhentede, sidste_afhentede, ugedag, mean_temp_6h, mean_tilskuere, sidste_tilskuer_antal)
)
View(dataset)
write_rds(dataset, "data/dataset.rds")
dataset <- read_rds("data/dataset.rds")
x <- model.matrix(antal_afhentede ~ . - 1, dataset)
y <- dataset$antal_afhentede
model <- lm(antal_afhentede ~ . , data = dataset)
vif(model)
summary(model)
cor_matrix <- cor(x)
cor_long <- as.data.frame(as.table(cor_matrix)) |>
rename(Korrelation = Freq) |>
filter(Var1 != Var2) |>
filter(abs(Korrelation) > 0.75) |>
arrange(desc(Korrelation))
# Ridge og Lasso --------------------------------------------
model <- lm(y ~ x)
grid <- 10^seq(10, -2, length = 100)
set.seed(123)
train <- sample(1:nrow(x), nrow(x)*2/3)
test <- (-train)
y.test <- y[test]
# Ridge
ridge.mod <- glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 0,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_ridge_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
ridge.pred <- predict(ridge.mod, s = bestlam, newx = x[test, ])
rmse_ridge_test <- sqrt(mean((ridge.pred - y.test)^2))
rmse_ridge_test
# Lasso
lasso.mod <- glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
thresh = 1e-12
)
set.seed(123)
cv.out <- cv.glmnet(
x[train, ],
y[train],
alpha = 1,
lambda = grid,
nfolds = 5                    )
bestlam <- cv.out$lambda.min
rmse_lasso_cv <- sqrt(cv.out$cvm[cv.out$lambda == bestlam])
lasso.pred <- predict(lasso.mod, s = bestlam, newx = x[test, ])
rmse_lasso_test <- sqrt(mean((lasso.pred - y.test)^2))
rmse_lasso_test
# 0 features
set.seed(123)
glm.fit <- glm(antal_afhentede ~ 1, data = dataset[train, ])
rmse_0_cv <- sqrt(cv.glm(dataset[train, ], glm.fit , K = 10)$delta[1])
rmse_0_test <- sqrt(mean((dataset[test, ]$antal_afhentede - predict(glm.fit, dataset[test, ]))^2))
rmse_0_test
predict.regsubsets <- function(object, newdata, id, ...) {
form <- as.formula(object$call[[2]])
mat <- model.matrix(form, newdata)
coefi <- coef(object, id = id)
xvars <- names(coefi)
mat[, xvars] %*% coefi
}
samlet_train <- dataset[train,]
samlet_test <- dataset[test,]
k <- 10 # Vi danner 10 folds
n <- nrow(samlet_train) # registrerer hvor mange observationer, vi har.
set.seed(1)
folds <- sample(rep(1:k, length = n)) #Vi tildeler en værdi mellem 1 og
dim(samlet_train)[2]  # Der er 14 variabler og dermed 13 prædiktorer
cv.errors <- matrix(NA, k, 14,
dimnames = list(NULL, paste(1:19)))
file.create("færdiggør_datasæt_1eksamen.R")
pacman::p_load(readr, dplyr, lubridate)
samlet_sql_query <- read_rds("data/samlet_sql_query.rds")
samlet_data <- as_tibble(samlet_sql_query) |>
mutate(
dato = as.Date(dato, origin = "1970-01-01"),
kampstart = hms(parse_time(kampstart)),
tid = hms(parse_time(tid))
)
samlet_data_flot <- samlet_data |>
filter(
kampstart >= tid & kampstart - hours(6) <= tid
) |>
group_by(dato) |>
mutate(
mean_temp_6h = round(mean(temp_mean_past1h), 1),
mean_precip_6h = round(mean(precip_past1h, na.rm = TRUE), 1),
mean_precip_dur_6h = round(mean(precip_dur_past1h, na.rm = TRUE), 1),
mean_wind_speed_6h = round(mean(wind_speed_past1h), 1),
dag_type = ifelse(ugedag %in% c("fredag","lørdag", "søndag"), "Weekend", "Hverdag")
) |>
slice_head() |>
ungroup() |>
select(år,
årstid,
måned,
dag,
kampstart,
ugedag,
dag_type,
runde,
ude,
antal_afhentede,
mean_afhentede,
sidste_afhentede,
mean_tilskuere,
sidste_tilskuer_antal,
mean_temp_6h,
mean_precip_6h,
mean_precip_dur_6h,
mean_wind_speed_6h
)
